{"ast":null,"code":"var _jsxFileName = \"/Users/sinamdar/Documents/GitHub/interview prep/Monad interview/countries-uvbvpe/countries-react-app/src/components/Home/Home.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\nimport debounce from \"lodash.debounce\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getFilteredCountries(search, region, countries) {\n  let regionFiltered = countries;\n  if (region !== \"\") regionFiltered = countries.filter(country => country.region.toLowerCase() === region);\n  if (search === \"\") return regionFiltered;\n  return regionFiltered.filter(country => country.name.toLowerCase().includes(search.toLowerCase()));\n}\n\nexport default function Home() {\n  _s();\n\n  const [search, setSearch] = useState(\"\");\n  const [countries, setCountries] = useState([]);\n  const [region, setRegion] = useState(\"\");\n  useEffect(() => {\n    fetch(\"https://restcountries.com/v2/all?fields=name,population,region,capital,flags\").then(res => res.json()).then(json => {\n      setCountries(json);\n      console.log(\"countries set\");\n    }).catch(error => console.log(error));\n  }, []);\n  const filteredCountries = getFilteredCountries(search, region, countries);\n\n  const updateSearch = e => setSearch(e.target.value);\n\n  const debounceChange = debounce(updateSearch, 500);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"max-w-6xl mx-auto px-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between py-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-dark-blue px-6\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faMagnifyingGlass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"bg-dark-blue px-6 py-2 focus:outline-none\",\n          type: \"text\",\n          onChange: debounceChange,\n          placeholder: \"Search for a country...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"bg-dark-blue text-sm px-6 py-2\",\n        value: region,\n        onChange: e => setRegion(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Filter by Region\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), [...new Set(countries.map(country => country.region))].map(region => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: region.toLowerCase(),\n          children: region\n        }, region, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid gap-y-12 md:grid-cols-3 sm:grid-cols-2 grid-cols-1 justify-items-center\",\n      children: filteredCountries.map(country => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/${country.name.toLowerCase()}`,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          country: country\n        }, country.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, country.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"AduvIxkEXJfqA69QalPv+ea2rM4=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","Link","FontAwesomeIcon","faMagnifyingGlass","debounce","Card","getFilteredCountries","search","region","countries","regionFiltered","filter","country","toLowerCase","name","includes","Home","setSearch","setCountries","setRegion","fetch","then","res","json","console","log","catch","error","filteredCountries","updateSearch","e","target","value","debounceChange","Set","map"],"sources":["/Users/sinamdar/Documents/GitHub/interview prep/Monad interview/countries-uvbvpe/countries-react-app/src/components/Home/Home.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\nimport debounce from \"lodash.debounce\";\nimport Card from \"./Card\";\n\nfunction getFilteredCountries(search, region, countries) {\n  let regionFiltered = countries;\n  if (region !== \"\")\n    regionFiltered = countries.filter(\n      (country) => country.region.toLowerCase() === region\n    );\n  if (search === \"\") return regionFiltered;\n  return regionFiltered.filter((country) =>\n    country.name.toLowerCase().includes(search.toLowerCase())\n  );\n}\n\nexport default function Home() {\n  const [search, setSearch] = useState(\"\");\n  const [countries, setCountries] = useState([]);\n  const [region, setRegion] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\n      \"https://restcountries.com/v2/all?fields=name,population,region,capital,flags\"\n    )\n      .then((res) => res.json())\n      .then((json) => {\n        setCountries(json);\n        console.log(\"countries set\");\n      })\n      .catch((error) => console.log(error));\n  }, []);\n\n  const filteredCountries = getFilteredCountries(search, region, countries);\n\n  const updateSearch = (e) => setSearch(e.target.value);\n\n  const debounceChange = debounce(updateSearch, 500);\n\n  return (\n    <main className='max-w-6xl mx-auto px-6'>\n      <div className='flex justify-between py-6'>\n        <div className='bg-dark-blue px-6'>\n          <FontAwesomeIcon icon={faMagnifyingGlass} />\n          <input\n            className='bg-dark-blue px-6 py-2 focus:outline-none'\n            type='text'\n            onChange={debounceChange}\n            placeholder='Search for a country...'\n          />\n        </div>\n        <select\n          className='bg-dark-blue text-sm px-6 py-2'\n          value={region}\n          onChange={(e) => setRegion(e.target.value)}\n        >\n          <option value=''>Filter by Region</option>\n          {[...new Set(countries.map((country) => country.region))].map(\n            (region) => (\n              <option key={region} value={region.toLowerCase()}>\n                {region}\n              </option>\n            )\n          )}\n        </select>\n      </div>\n      <div className='grid gap-y-12 md:grid-cols-3 sm:grid-cols-2 grid-cols-1 justify-items-center'>\n        {filteredCountries.map((country) => (\n          <Link key={country.name} to={`/${country.name.toLowerCase()}`}>\n            <Card key={country.name} country={country} />\n          </Link>\n        ))}\n      </div>\n    </main>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}